name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact-name: linux-artifacts
          - os: macos-latest  
            platform: darwin
            artifact-name: mac-artifacts
          - os: windows-latest
            platform: win32
            artifact-name: windows-artifacts
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3-dev \
            libatk-bridge2.0-dev \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libxss1 \
            libasound2-dev \
            libgtk-3-0

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Package application (Electron)
        run: npm run make

      - name: Upload platform artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: electron/out/make/
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts/

      - name: Display structure of downloaded files
        run: find release-artifacts -type f -name "*" | head -20

      - name: Generate release notes
        id: release-notes
        run: |
          RELEASE_NOTES="Release ${{ github.ref_name }}

          ## What's New
          - Cross-platform sample management for Squarp Rample
          - Kit editing and slot management
          - Reference-only sample handling
          - Local store synchronization

          ## Downloads
          - **Windows**: Download the .exe or .msi file
          - **macOS**: Download the .dmg file  
          - **Linux**: Download the .deb, .rpm, or .zip file

          ## Installation Notes
          This is a desktop application for managing Squarp Rample sample kits. Extract/install and run the application to get started."
          
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.release-notes.outputs.notes }}
          artifacts: |
            release-artifacts/**/*.zip
            release-artifacts/**/*.dmg
            release-artifacts/**/*.exe
            release-artifacts/**/*.msi
            release-artifacts/**/*.deb
            release-artifacts/**/*.rpm
            release-artifacts/**/*.AppImage
          makeLatest: true
          draft: false
